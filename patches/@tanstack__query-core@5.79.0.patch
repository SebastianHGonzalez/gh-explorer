diff --git a/build/modern/infiniteQueryBehavior.js b/build/modern/infiniteQueryBehavior.js
index 20503408a880d40433f99204daa6fac9602ee5e9..ebf7f4e55f318ef362db9baeff774d321ea6b160 100644
--- a/build/modern/infiniteQueryBehavior.js
+++ b/build/modern/infiniteQueryBehavior.js
@@ -31,7 +31,7 @@ function infiniteQueryBehavior(pages) {
           if (cancelled) {
             return Promise.reject();
           }
-          if (param == null && data.pages.length) {
+          if (param == null && data.pages?.length) {
             return Promise.resolve(data);
           }
           const queryFnContext = {
@@ -52,7 +52,7 @@ function infiniteQueryBehavior(pages) {
             pageParams: addTo(data.pageParams, param, maxPages)
           };
         };
-        if (direction && oldPages.length) {
+        if (direction && oldPages?.length) {
           const previous = direction === "backward";
           const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;
           const oldData = {
@@ -62,7 +62,7 @@ function infiniteQueryBehavior(pages) {
           const param = pageParamFn(options, oldData);
           result = await fetchPage(oldData, param, previous);
         } else {
-          const remainingPages = pages ?? oldPages.length;
+          const remainingPages = pages ?? oldPages?.length;
           do {
             const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);
             if (currentPage > 0 && param == null) {
@@ -94,8 +94,8 @@ function infiniteQueryBehavior(pages) {
   };
 }
 function getNextPageParam(options, { pages, pageParams }) {
-  const lastIndex = pages.length - 1;
-  return pages.length > 0 ? options.getNextPageParam(
+  const lastIndex = pages?.length - 1;
+  return pages?.length > 0 ? options.getNextPageParam(
     pages[lastIndex],
     pages,
     pageParams[lastIndex],
@@ -103,7 +103,7 @@ function getNextPageParam(options, { pages, pageParams }) {
   ) : void 0;
 }
 function getPreviousPageParam(options, { pages, pageParams }) {
-  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;
+  return pages?.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;
 }
 function hasNextPage(options, data) {
   if (!data) return false;
